<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.apache.phoenix</groupId>
    <artifactId>phoenix</artifactId>
    <version>4.2.3-SNAPSHOT</version>
  </parent>
  <artifactId>phoenix-core</artifactId>
  <name>Phoenix Core</name>
  <description>Core Phoenix codebase</description>

  <licenses>
      <license>
          <name>The Apache Software License, Version 2.0</name>
          <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
          <distribution>repo</distribution>
          <comments />
      </license>
  </licenses>

  <organization>
      <name>Apache Software Foundation</name>
      <url>http://www.apache.org</url>
  </organization>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <targetPath>META-INF/services</targetPath>
        <includes>
          <include>java.sql.Driver</include>
        </includes>
      </resource>
      <resource>
			<filtering>true</filtering>
				<directory>${basedir}/src/main/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>lib/</exclude>
					<exclude>conf/</exclude>
				</excludes>
			</resource>
    </resources>

    <plugins>
      <!-- Add the ant-generated sources to the source path -->
     <plugin>
       <groupId>org.apache.maven.plugins</groupId>
       <artifactId>maven-site-plugin</artifactId>
       <version>3.2</version>
       <dependencies>
        <dependency>
           <groupId>org.apache.maven.doxia</groupId>
           <artifactId>doxia-module-markdown</artifactId>
           <version>1.3</version>
         </dependency>
         <dependency>
           <groupId>lt.velykis.maven.skins</groupId>
           <artifactId>reflow-velocity-tools</artifactId>
           <version>1.0.0</version>
         </dependency>
         <dependency>
           <groupId>org.apache.velocity</groupId>
           <artifactId>velocity</artifactId>
           <version>1.7</version>
         </dependency>
       </dependencies>
       <configuration>
         <reportPlugins>
           <plugin>
             <groupId>org.codehaus.mojo</groupId>
             <artifactId>findbugs-maven-plugin</artifactId>
	         <version>2.5.2</version>
           </plugin>
         </reportPlugins>
       </configuration>
     </plugin>
     <plugin>
       <artifactId>exec-maven-plugin</artifactId>
       <groupId>org.codehaus.mojo</groupId>
       <version>1.2.1</version>
       <executions>
        <execution><!-- Run our version calculation script -->
          <id>Merge Language Reference</id>
           <phase>site</phase>
           <goals>
             <goal>exec</goal>
           </goals>
           <configuration>
             <executable>${basedir}/src/site/bin/merge.sh</executable>
           </configuration>
         </execution>
       </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${antlr-output.dir}</source>
                <source>${antlr-input.dir}</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Compile the antlr sources -->
      <plugin>
        <groupId>org.antlr</groupId>
        <artifactId>antlr3-maven-plugin</artifactId>
        <version>3.5</version>
        <executions>
          <execution>
            <goals>
              <goal>antlr</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <outputDirectory>${antlr-output.dir}/org/apache/phoenix/parse</outputDirectory>
        </configuration>
      </plugin>
      <!-- Run with -Dmaven.test.skip.exec=true to build -tests.jar without running 
        tests (this is needed for upstream projects whose tests need this jar simply for 
        compilation) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <phase>prepare-package
            </phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
            <configuration>
              <archive>
                <manifest>
                  <mainClass>org.apache.phoenix.util.GeneratePerformanceData</mainClass>
                </manifest>
              </archive>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <!-- Exclude these 2 packages, because their dependency _binary_ files 
            include the sources, and Maven 2.2 appears to add them to the sources to compile, 
            weird -->
          <excludes>
            <exclude>org/apache/jute/**</exclude>
            <exclude>org/apache/zookeeper/**</exclude>
            <exclude>**/*.jsp</exclude>
            <exclude>log4j.properties</exclude>
          </excludes>
        </configuration>
      </plugin>
      <!-- Setup eclipse -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <buildcommands>
            <buildcommand>org.jamon.project.templateBuilder</buildcommand>
            <buildcommand>org.eclipse.jdt.core.javabuilder</buildcommand>
          </buildcommands>
        </configuration>
      </plugin>
      <plugin>
        <!--Make it so assembly:single does nothing in here -->
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>core</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <attach>false</attach>
              <finalName>phoenix</finalName>
              <archive>
                <index>true</index>
                <manifest>
                  <addClasspath>true</addClasspath>
                  <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                  <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                </manifest>
              </archive>
              <descriptors>
                <descriptor>src/build/phoenix-core.xml</descriptor>
              </descriptors>
            </configuration>
          </execution>
        </executions>      
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven-dependency-plugin.version}</version>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <!-- Make sure we have all the antlr dependencies -->
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr</artifactId>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr-runtime</artifactId>
    </dependency>
    <dependency>
      <groupId>jline</groupId>
      <artifactId>jline</artifactId>
    </dependency>
    <dependency>
      <groupId>sqlline</groupId>
      <artifactId>sqlline</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <!-- Findbugs Annotation -->
    <dependency>
      <groupId>net.sourceforge.findbugs</groupId>
      <artifactId>annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-core-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-jaxrs</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-xc</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>${protobuf-java.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.0.1</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.iq80.snappy</groupId>
      <artifactId>snappy</artifactId>
      <version>${snappy.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.stephenc.high-scale-lib</groupId>
      <artifactId>high-scale-lib</artifactId>
      <version>1.1.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.yammer.metrics</groupId>
      <artifactId>metrics-core</artifactId>
      <version>2.1.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.lmax</groupId>
      <artifactId>disruptor</artifactId>
      <version>3.2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.cloudera.htrace</groupId>
      <artifactId>htrace-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-testing-util</artifactId>
      <scope>test</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-it</artifactId>
      <version>${hbase.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-protocol</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-server</artifactId>
      <version>${hbase.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-server</artifactId>
      <version>${hbase.version}</version>
      <type>test-jar</type>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-hadoop-compat</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-hadoop-compat</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-hadoop2-compat</artifactId>
      <version>${hbase.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-hadoop2-compat</artifactId>
      <version>${hbase.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-mapreduce-client-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-minicluster</artifactId>
    </dependency>
  </dependencies>
  
  <profiles>
  	<profile>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<id>local</id>
			<properties>
				<log4j.level>ALL</log4j.level>
				<log4j.rootLogger>FILE</log4j.rootLogger>
				<log4j.rootLogger.filename>phoenix.log</log4j.rootLogger.filename>
				<zk.timeout>240000</zk.timeout>
				<hbase.zookeeper.property.clientPort>2181</hbase.zookeeper.property.clientPort>
				<hbase.zookeeper.quorum>10.10.0.15</hbase.zookeeper.quorum>
				<zookeeper.znode.parent>/hbase</zookeeper.znode.parent>
				<hbase.master>*10.10.0.15:60000*</hbase.master>
				<hbase.rpc.timeout>120000000</hbase.rpc.timeout>
				<hbase.client.scanner.timeout.period>120000000</hbase.client.scanner.timeout.period>
				<hbase.client.scanner.caching>10000</hbase.client.scanner.caching>
				<phoenix.zookeeper.quorum>10.10.0.15</phoenix.zookeeper.quorum>
				<phoenix.query.targetConcurrency>32</phoenix.query.targetConcurrency>
				<phoenix.query.maxConcurrency>64</phoenix.query.maxConcurrency>
				<phoenix.query.maxIntraRegionParallelization>1</phoenix.query.maxIntraRegionParallelization>
				<phoenix.query.timeoutMs>18000000</phoenix.query.timeoutMs>
			</properties>
			</profile>
		<profile>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<id>qa</id>
			<properties>
				<log4j.level>ALL</log4j.level>
				<log4j.rootLogger>FILE</log4j.rootLogger>
				<log4j.rootLogger.filename>phoenix.log</log4j.rootLogger.filename>
				<zk.timeout>240000</zk.timeout>
				<hbase.zookeeper.property.clientPort>2181</hbase.zookeeper.property.clientPort>
				<hbase.zookeeper.quorum>10.10.0.15</hbase.zookeeper.quorum>
				<zookeeper.znode.parent>/hbase</zookeeper.znode.parent>
				<hbase.master>*10.10.0.15:60000*</hbase.master>
				<hbase.rpc.timeout>120000000</hbase.rpc.timeout>
				<hbase.client.scanner.timeout.period>120000000</hbase.client.scanner.timeout.period>
				<hbase.client.scanner.caching>10000</hbase.client.scanner.caching>
				<phoenix.zookeeper.quorum>10.10.0.15</phoenix.zookeeper.quorum>
				<phoenix.query.targetConcurrency>32</phoenix.query.targetConcurrency>
				<phoenix.query.maxConcurrency>64</phoenix.query.maxConcurrency>
				<phoenix.query.maxIntraRegionParallelization>1</phoenix.query.maxIntraRegionParallelization>
				<phoenix.query.timeoutMs>18000000</phoenix.query.timeoutMs>
			</properties>
			</profile>
			<profile>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<id>prod</id>
			<properties>
				<log4j.level>ALL</log4j.level>
				<log4j.rootLogger>FILE</log4j.rootLogger>
				<log4j.rootLogger.filename>phoenix.log</log4j.rootLogger.filename>
				<zk.timeout>240000</zk.timeout>
				<hbase.zookeeper.property.clientPort>2181</hbase.zookeeper.property.clientPort>
				<hbase.zookeeper.quorum>10.10.0.26</hbase.zookeeper.quorum>
				<zookeeper.znode.parent>/hbase</zookeeper.znode.parent>
				<hbase.master>*10.10.0.25:60000*</hbase.master>
				<hbase.rpc.timeout>120000000</hbase.rpc.timeout>
				<hbase.client.scanner.timeout.period>120000000</hbase.client.scanner.timeout.period>
				<hbase.client.scanner.caching>10000</hbase.client.scanner.caching>
				<phoenix.zookeeper.quorum>10.10.0.26</phoenix.zookeeper.quorum>
				<phoenix.query.targetConcurrency>32</phoenix.query.targetConcurrency>
				<phoenix.query.maxConcurrency>64</phoenix.query.maxConcurrency>
				<phoenix.query.maxIntraRegionParallelization>1</phoenix.query.maxIntraRegionParallelization>
				<phoenix.query.timeoutMs>18000000</phoenix.query.timeoutMs>
			</properties>
			</profile>
		 </profiles>
</project>
